
name: Check PR

on:
  # Triggers the workflow on every pull request to master
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Load API Token from secrets
        env:
          API_TOKEN: ${{ secrets.API_OTKEN }}
        run: echo API_TOKEN=\"$API_TOKEN\" > ./local.properties

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.kt') }}

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Build the app
        run: ./gradlew assembleDebug

      - name: Upload Reports
        uses: actions/upload-artifact@v2
        with:
          name: apk
          path: app/build/outputs/apk/debug/app-debug.apk
        if: always()

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        api-level: [21]
        target: [default]

    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
      #        with:
      #          fetch-depth: 0

      - name: Load API Token from secrets
        env:
          API_TOKEN: ${{ secrets.API_OTKEN }}
        run: echo API_TOKEN=\"$API_TOKEN\" > ./local.properties

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.kt') }}

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Run detekt
        run: ./gradlew detektCheck

      - name: Run unit tests
        run: ./gradlew test --stacktrace

      - name: Instrumentation Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 21
          target: google_apis
          arch: x86
#          target: ${{ matrix.target }}
          script: ./gradlew connectedAndroidTest

      - name: Upload Reports
        uses: actions/upload-artifact@v2
        with:
          name: Test-Reports
          path: app/build/reports
        if: always()


#      - name: Get App version
#        id: version
#        run: |
#          echo "::set-output name=commits::$(git rev-list --count HEAD)"
#
#      - name: Get color
#        run:
#        echo "The number of commits are ${{ steps.version.outputs.commits }}"
